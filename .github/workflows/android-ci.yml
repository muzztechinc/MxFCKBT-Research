name: MxFckBT Android CI/CD v4

on:
  push:
    branches: [ main, master ]
    paths:
      - 'app/**'
      - '.github/workflows/**'
      - 'build.gradle'
      - 'gradle.properties'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Manual trigger
  schedule:
    - cron: '0 0 * * 0'  # Weekly builds

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  JAVA_OPTS: "-Xmx4g -Xms512m"

jobs:
  quality-check:
    name: Code Quality Check
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'
        check-latest: true

    - name: Validate Gradle Wrapper
      uses: gradle/actions/wrapper-validation@v4

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          ~/.gradle/checksums
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Check code formatting
      run: ./gradlew ktlintCheck --no-daemon

    - name: Run static analysis
      run: ./gradlew detekt --no-daemon

    - name: Upload quality reports
      uses: actions/upload-artifact@v4
      with:
        name: quality-reports
        path: |
          app/build/reports/ktlint/
          app/build/reports/detekt/
        retention-days: 7

  build:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: quality-check
    timeout-minutes: 30
    strategy:
      matrix:
        build-type: [debug, release]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'
        check-latest: true

    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          ~/.gradle/checksums
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build APK
      run: ./gradlew assemble${{ matrix.build-type }} --no-daemon --warning-mode=all

    - name: Run unit tests
      run: ./gradlew test --no-daemon --continue

    - name: Run instrumentation tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        script: ./gradlew connectedCheck --no-daemon

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.build-type }}
        path: |
          app/build/reports/tests/
          app/build/outputs/androidTest-results/
        retention-days: 14

  release-build:
    name: Release Build & Sign
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    timeout-minutes: 25

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Build signed release APK
      run: |
        ./gradlew assembleRelease --no-daemon
        echo "APK built at: $(find . -name "*.apk" -type f)"

    - name: Sign APK
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: app/build/outputs/apk/release/
        signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
        alias: ${{ secrets.ANDROID_KEY_ALIAS }}
        keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

    - name: Upload signed APK
      uses: actions/upload-artifact@v4
      with:
        name: MxFckBT-Signed-APK
        path: app/build/outputs/apk/release/*-signed.apk
        retention-days: 30
        compression-level: 9

    - name: Generate build info
      run: |
        echo "Build Date: $(date)" >> build-info.txt
        echo "Commit: ${{ github.sha }}" >> build-info.txt
        echo "Runner: ${{ runner.os }}" >> build-info.txt
        echo "Build Type: release" >> build-info.txt

    - name: Upload build info
      uses: actions/upload-artifact@v4
      with:
        name: build-metadata
        path: build-info.txt
        retention-days: 30

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 20

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run security scan
      uses: mobsf/mobsf-action@v1
      with:
        scan_type: "apk"
        file: "app/build/outputs/apk/release/app-release.apk"
        mobsf_url: "https://mobsf.live"
        mobsf_api_key: ${{ secrets.MOBSF_API_KEY }}

    - name: Upload security report
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: mobsf_scan_report.json
        retention-days: 30

  deploy:
    name: Deploy to Testing
    runs-on: ubuntu-latest
    needs: [release-build, security-scan]
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    timeout-minutes: 10

    steps:
    - name: Download signed APK
      uses: actions/download-artifact@v4
      with:
        name: MxFckBT-Signed-APK
        path: ./artifacts

    - name: Deploy to Firebase App Distribution
      uses: wzieba/Firebase-Distribution-Github-Action@v1
      with:
        appId: ${{ secrets.FIREBASE_APP_ID }}
        token: ${{ secrets.FIREBASE_TOKEN }}
        groups: "testers"
        file: "artifacts/*.apk"

    - name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#build-notifications'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
      if: always()
